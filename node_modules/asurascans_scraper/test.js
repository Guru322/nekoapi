const asura = require('./index.js')  
let fs = require('node:fs')
let axios = require('axios')
let pdfPath = './temp/'
const PDFDocument = require('pdfkit')
const { tmpdir } = require('os')
        

  
let imagesToPDF = async (imageUrls) => {
        
        const pdf = new PDFDocument({ autoFirstPage: false })
        let filename = `${tmpdir()}/${Math.random().toString(36)}.pdf`
        const stream = fs.createWriteStream(filename)
        pdf.pipe(stream)
        for (const image of imageUrls) {
            const data = image
            const img = pdf.openImage(data)
            pdf.addPage({ size: [img.width, img.height] })
            pdf.image(img, 0, 0)
            const index = imageUrls.indexOf(image)
            if (index === imageUrls.length - 1) pdf.end()
        }
        await new Promise((resolve, reject) => {
            stream.on('finish', () => resolve(filename))
            stream.on('error', reject)
        })
        const buffer =  fs.readFileSync(filename)
         fs.unlinkSync(filename)
        return buffer
              }
async function pdf() {
  if(!fs.existsSync(pdfPath)) {
    fs.mkdirSync(pdfPath)
  }
   let images = await asura.epDownloader(url)
  for (let i = 0; i < images.length; i++) {
    
  let rs =  await axios.get(images[i],{responseType:'arraybuffer'})
    //console.log(rs.data)
     fs.writeFileSync(pdfPath+i+"topdf.jpg",rs.data)
  //  console.log("lol"))
  }
  const pages =  ( fs.readdirSync(pdfPath)).filter(e=>e.includes('topdf')).map(e=>pdfPath+e)
  let dta =  await imagesToPDF(pages)
  fs.rmdirSync('./temp',{recursive:true})
  return dta;
}
//asura.search("Dr").then(console.log)
//asura.details("/7117659858-legend-of-asura-the-venom-dragon/").then(console.log)
asura.lastUpdate().then(console.log)
//pdf()